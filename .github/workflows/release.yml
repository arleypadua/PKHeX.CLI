name: Release

on:
  workflow_dispatch:
    inputs: 
      versionBump:
        description: The type of version bump (major/minor/patch)
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  versionBump:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.semver_tag.outputs.new_version }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure git
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Semver tag
        id: semver_tag
        run: |
          # Get the last tag from git
          last_tag=$(git describe --tags --always --abbrev=0)

          ls

          # Call the bump_version function with the last tag and the type "minor"
          new_version=$(./bump_version "$last_tag" "${{ inputs.versionBump }}")

          echo "${{ inputs.versionBump }} bump from $last_tag to $new_version"
          echo "new_version=$new_version" >> "$GITHUB_OUTPUT"
      
      - name: Push new tag
        run: |
          git tag ${{ steps.semver_tag.outputs.new_version }} HEAD
          git push origin --tags

  publish:
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            rid: linux-x64
            artifact:
              from: PKHeX.CLI
              to: pkhex-cli
          - os: windows-latest
            rid: win-x64
            artifact:
              from: PKHeX.CLI.exe
              to: pkhex-cli.exe
          - os: macos-latest
            rid: osx-arm64
            artifact:
              from: PKHeX.CLI
              to: pkhex-cli
          - os: macos-latest
            rid: osx-x64
            artifact:
              from: PKHeX.CLI
              to: pkhex-cli

    runs-on: ${{ matrix.config.os }}
    needs: versionBump

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Publish - ${{ matrix.config.rid }}
        run: dotnet publish ./src/PKHeX.CLI/PKHeX.CLI.csproj -r ${{ matrix.config.rid }} -c Release /p:Version=${{ needs.versionBump.outputs.new_version }}

      - name: Copy artifact with new name
        run: cp ./src/PKHeX.CLI/bin/Release/net8.0/${{ matrix.config.rid }}/publish/${{ matrix.config.artifact.from }} ./src/PKHeX.CLI/bin/Release/net8.0/${{ matrix.config.rid }}/publish/${{ matrix.config.artifact.to }}

      - name: Upload - ${{ matrix.config.rid }}
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.config.rid }}
          path: ./src/PKHeX.CLI/bin/Release/net8.0/${{ matrix.config.rid }}/publish/${{ matrix.config.artifact.to }}

  release:
    runs-on: ubuntu-latest
    needs: publish

    permissions:
      contents: write

    steps:

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: List artifacts
        run: ls -R artifacts
      - name: Zip artifacts
        run: |
          zip -j pkhex-cli-linux-x64.zip artifacts/artifact-linux-x64/pkhex-cli
          zip -j pkhex-cli-win-x64.zip artifacts/artifact-win-x64/pkhex-cli.exe
          zip -j pkhex-cli-osx-arm64.zip artifacts/artifact-osx-arm64/pkhex-cli
          zip -j pkhex-cli-osx-x64.zip artifacts/artifact-osx-x64/pkhex-cli

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          generate_release_notes: true
          files: |
            pkhex-cli-linux-x64.zip
            pkhex-cli-win-x64.zip
            pkhex-cli-osx-arm64.zip
            pkhex-cli-osx-x64.zip
