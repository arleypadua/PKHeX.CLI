@inject JsService Js
@inject NavigationManager Navigation
@inject HttpClient HttpClient

@if (GameService.IsLoaded)
{
    <Space Direction="DirectionVHType.Vertical" Style="width: 100%; max-width: 300px; gap: 20px;">
        <Button Type="@ButtonType.Primary" Icon="@IconType.Outline.Export" OnClick='ExportSaveAsync'>Export</Button>
        <Button Icon="@IconType.Outline.FolderOpen" OnClick='OpenFilePickerAsync'>Open new...</Button>
    </Space>
}
else
{
    <Space Direction="DirectionVHType.Vertical" Style="width: 100%; max-width: 300px; gap: 20px;">
        <Button Type="@ButtonType.Primary" Icon="@IconType.Outline.FolderOpen" OnClick="OpenFilePickerAsync">Open</Button>
        <Button OnClick='OpenDemo'>Demo</Button>
    </Space>
}

<InputFile OnChange="LoadSave" @ref="_inputGameFile" style="display: none;"></InputFile>


@code {
    private InputFile _inputGameFile = default!;

    [Inject] public required GameService GameService { get; set; }

    private async Task LoadSave(InputFileChangeEventArgs e)
    {
        using MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream(2 * 1024 * 1000).CopyToAsync(ms);

        GameService.Load(ms.ToArray(), e.File.Name);
        
        Navigation.NavigateTo("/");
    }

    private async Task ExportSaveAsync()
    {
        if (GameService.Game is null) return;
        
        var stream = GameService.Export();
        await Js.DownloadFile(stream, GameService.FileName ?? string.Empty);
    }

    private async Task OpenDemo()
    {
        var testData = await HttpClient.GetByteArrayAsync("https://github.com/projectpokemon/ProjectCompleteDexSaves/raw/master/Gen%204%20-%20Pokemon%20SoulSilver%20(ENG).sav");
        GameService.Load(testData, "savedata_1.sav");
        Navigation.NavigateTo($"/");
    }

    private async Task OpenFilePickerAsync() => await Js.ClickOnAsync(_inputGameFile.Element);
}
