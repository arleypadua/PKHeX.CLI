@using PKHeX.Facade.Repositories

<Select TItem="MoveDefinition"
        TItemValue="ushort"
        DataSource="@InternalMoves()"
        @bind-Value="@SelectedMoveId"
        OnSelectedItemChanged="SelectedMoveChangedInternal"
        LabelName="@nameof(MoveDefinition.Name)"
        ValueName="@nameof(MoveDefinition.Id)"
        Placeholder="Move"
        DefaultActiveFirstOption="false"
        EnableSearch
        EnableVirtualization>
    <LabelTemplate>
        @context.Name
    </LabelTemplate>
    <ItemTemplate>
        @context.Name
    </ItemTemplate>
</Select>

@code {
    [Parameter] public required IEnumerable<MoveDefinition> Moves { get; set; }
    [Parameter] public ushort SelectedMoveId { get; set; }
    [Parameter] public EventCallback<MoveDefinition> SelectedMoveChanged { get; set; }
    
    private bool _dataSourceJustLoaded = true;

    private IEnumerable<MoveDefinition> InternalMoves()
    {
        if (SelectedMoveId == MoveDefinition.None.Id) return Moves;

        var currentMove = MoveRepository.Instance.GetMove(SelectedMoveId);
        List<MoveDefinition> listWithSelf =
        [
            currentMove
        ];
        listWithSelf.AddRange(Moves);

        return listWithSelf;
    }

    private Task SelectedMoveChangedInternal(MoveDefinition arg)
    {
        if (_dataSourceJustLoaded)
        {
            _dataSourceJustLoaded = false;
            return Task.CompletedTask;
        }
        
        return SelectedMoveChanged.InvokeAsync(arg);
    }

}