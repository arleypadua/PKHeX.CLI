@using PKHeX.Facade.Repositories
@inject NavigationManager Navigation
@inject EncounterService EncouterService

<Table
    TItem="Encounter"
    DataSource="@DataSource"
    PageIndex="@(PageIndex ?? 1)"
    PageSize="@(PageSize ?? 10)"
    OnPageSizeChange="HandlePagination"
    OnPageIndexChange="HandlePagination"
    Size="TableSize.Small"
    Responsive
    EnableVirtualization>
    <PropertyColumn Title="" Property="@(c => c.Species)">
        <PokemonIcon Species="@context.Species" Form="@context.Form"/>
    </PropertyColumn>
    <PropertyColumn Title="Species" Property="@(c => c.Species.Name())" Sortable Filterable/>
    <PropertyColumn Title="Encounter" Property="@(c => c.Data.LongName)" Sortable Filterable/>
    <PropertyColumn Title="Ball/Egg" Property="@(c => c.Ball.Name)">
        @if (context.Data.IsEgg)
        {
            <Text>ðŸ¥š Egg</Text>
        }
        @if (!context.Ball.IsNone)
        {
            <ItemIcon Item="@context.Ball"/>
        }
    </PropertyColumn>
    <PropertyColumn Title="Lvl" Property="@(c => c.LevelRange.Format)" Sortable Filterable/>
    <PropertyColumn Title="Location" Property="@(c => c.Location.Name)" Sortable Filterable>
        <Text>@context.Location.Name</Text>
    </PropertyColumn>
    <PropertyColumn Title="Game" Property="c => c.Version.Name"/>

    <ActionColumn Title="Action">
        <Space Size=@("small")>
            <SpaceItem>
                <Button
                    Type="@ButtonType.Link"
                    OnClick='() => HandleDetailsClick(context)'>
                    Details
                </Button>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>

@code {
    [Parameter] public IList<Encounter> DataSource { get; set; } = [];
    
    [SupplyParameterFromQuery(Name = "pageIndex")]
    public int? PageIndex { get; set; } = 1;
    
    [SupplyParameterFromQuery(Name = "pageSize")]
    public int? PageSize { get; set; } = 10;

    private void HandlePagination(PaginationEventArgs args)
    {
        PageIndex = args.Page;
        PageSize = args.PageSize;
        
        Navigation.StoreOnQuery(new () { { "pageIndex", PageIndex }, { "pageSize", PageSize } });
    }

    private void HandleDetailsClick(Encounter encounter) => EncouterService.SelectEncounter(encounter);

}